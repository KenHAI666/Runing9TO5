scripts/
 ├─ notion2jekyll.py   # Notion → Jekyll
 ├─ web2jekyll.py      # 後台輸入 → Jekyll
 └─ server.py          # Flask 後台

📝 開發者專用流程 (README_DEV.md)
這份文件記錄如何在 GitHub Codespaces 生成並發布文章。
---

🚀server.py後台 發布文章流程
在專案根目錄（與 templates/ 同層）啟動：

python scripts/server.py

然後打開瀏覽器訪問：

http://127.0.0.1:5000/
後台頁面流程：

填寫文章標題、分類、內容（可以用你設計的 markdown 樣式指令）。

按 預覽 → 會顯示渲染後的效果（套卡片 CSS）。

確認沒問題後按 發佈 → 自動生成 Markdown 檔到 _posts 並 push 到 GitHub。


---------------
以下作廢
---------------

🚀server.py+web2jekyll.py 發布文章流程

1️⃣ 啟動後台伺服器
開啟終端機，進入專案根目錄，並執行你的 Flask 伺服器：

python3 scripts/server.py
成功執行後，你將看到一個類似 * Running on http://127.0.0.1:5000 的訊息。

如果你是在 GitHub Codespaces 中執行，請點擊「在瀏覽器中開啟」或「在本地開啟」按鈕，或者直接訪問 Codespaces 提供的網址。

2️⃣ 透過後台介面發布文章
在瀏覽器中開啟 http://127.0.0.1:5000。

在網頁表單中輸入文章的 標題、分類 和 內容。
你可以即時看到文章的預覽效果。
確認內容無誤後，點擊「儲存並發布文章」按鈕。
腳本會自動將文章寫入 _posts 資料夾，並使用 YYYY-MM-DD-標題.md 的格式命名。

---
🚀 發布文章流程notion2jekyll.py

1️⃣ 開啟 Codespaces
打開 GitHub 專案頁
點 Code → Codespaces → New codespace
等待自動開啟雲端 VSCode

2️⃣ 執行腳本生成文章
在終端機輸入：
python3 scripts/notion2jekyll.py

3️⃣新增文章後，必須手動提交： 已改成自動
git add _posts/

git commit -m "新增文章: 測試文章"
⚠️ 注意：-m 後面一定要寫訊息，不能留空。

推送到 GitHub
git push origin main
---
